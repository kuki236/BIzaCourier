from database.conection import create_connection
from mysql.connector import Error
def create_transferencia_pedido(fecha_transferencia, estado_transferencia, id_pedido, id_sucursal_origen, id_sucursal_destino):
    """Crea una nueva transferencia de pedido en la base de datos."""
    connection = create_connection()
    if connection is not None:
        cursor = connection.cursor()
        try:
            query = """
            INSERT INTO TransferenciaPedido (fecha_Transferencia, estado_Transferencia, idPedido, idSucursalOrigen, idSucursalDestino)
            VALUES (%s, %s, %s, %s, %s)
            """
            cursor.execute(query, (fecha_transferencia, estado_transferencia, id_pedido, id_sucursal_origen, id_sucursal_destino))
            connection.commit()
            print("Transferencia de pedido creada con éxito.")
        except Error as e:
            print("Error al crear la transferencia de pedido:", e)
        finally:
            cursor.close()
            connection.close()

def read_transferencias_pedido():
    """Lee todas las transferencias de pedidos con información relacionada de las tablas asociadas."""
    connection = create_connection()
    if connection is not None:
        cursor = connection.cursor()
        try:
            query = """
            SELECT 
                tp.idTransferenciaPedido, 
                tp.fecha_Transferencia, 
                tp.estado_Transferencia, 
                p.idPedido, 
                p.nombre AS nombre_pedido, 
                so.idSucursal AS idSucursalOrigen, 
                so.nombre AS nombre_sucursal_origen,
                sd.idSucursal AS idSucursalDestino, 
                sd.nombre AS nombre_sucursal_destino
            FROM 
                TransferenciaPedido tp
            LEFT JOIN 
                Pedido p ON tp.idPedido = p.idPedido
            LEFT JOIN 
                Sucursal so ON tp.idSucursalOrigen = so.idSucursal
            LEFT JOIN 
                Sucursal sd ON tp.idSucursalDestino = sd.idSucursal
            """
            cursor.execute(query)
            result = cursor.fetchall()
            for row in result:
                print(row)
        except Error as e:
            print("Error al leer las transferencias de pedido:", e)
        finally:
            cursor.close()
            connection.close()

def update_transferencia_pedido(id_transferencia_pedido, fecha_transferencia, estado_transferencia):
    """Actualiza la información de una transferencia de pedido en la base de datos."""
    connection = create_connection()
    if connection is not None:
        cursor = connection.cursor()
        try:
            query = """
            UPDATE TransferenciaPedido
            SET fecha_Transferencia = %s, estado_Transferencia = %s
            WHERE idTransferenciaPedido = %s
            """
            cursor.execute(query, (fecha_transferencia, estado_transferencia, id_transferencia_pedido))
            connection.commit()
            print("Transferencia de pedido actualizada con éxito.")
        except Error as e:
            print("Error al actualizar la transferencia de pedido:", e)
        finally:
            cursor.close()
            connection.close()

def delete_transferencia_pedido(id_transferencia_pedido, id_pedido, id_sucursal_origen, id_sucursal_destino):
    """Elimina una transferencia de pedido de la base de datos."""
    connection = create_connection()
    if connection is not None:
        cursor = connection.cursor()
        try:
            query = """
            DELETE FROM TransferenciaPedido
            WHERE idTransferenciaPedido = %s AND idPedido = %s AND idSucursalOrigen = %s AND idSucursalDestino = %s
            """
            cursor.execute(query, (id_transferencia_pedido, id_pedido, id_sucursal_origen, id_sucursal_destino))
            connection.commit()
            print("Transferencia de pedido eliminada con éxito.")
        except Error as e:
            print("Error al eliminar la transferencia de pedido:", e)
        finally:
            cursor.close()
            connection.close()